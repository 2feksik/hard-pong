class Clock_face{
    field int xL, xR, y;
    field int leftNum;
    field int rightNum;
    field boolean exit;

    constructor Clock_face new(int AxL, int AxR, int Ay){
        let xL = AxL;
        let xR = AxR;
        let y = Ay;
        let leftNum  = 0;
        let rightNum = 0;
        let exit = false;
        do draw();
        return this;
    }

    method boolean getExit(){
        return exit;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void erase(){
        do Screen.setColor(false);
        do Screen.drawRectangle(xL, y, xR + 32, y + 32);
        return;
    }


    method void draw(){
        var int locationL;
        var int locationR;

        let locationL = (y * 32) + (xL / 16);
        let locationR = (y * 32) + (xR / 16);

        do erase();

        if (leftNum = 0) { do Numbers.drawZero(locationL); }
        if (leftNum = 1) { do Numbers.drawOne(locationL); }
        if (leftNum = 2) { do Numbers.drawTwo(locationL); }
        if (leftNum = 3) { do Numbers.drawThree(locationL); }
        if (leftNum = 4) { do Numbers.drawFour(locationL); }
        if (leftNum = 5) { do Numbers.drawFive(locationL); }
        if (leftNum = 6) { do Numbers.drawSix(locationL); }
        if (leftNum = 7) { do Numbers.drawSeven(locationL); }
        if (leftNum = 8) { do Numbers.drawEight(locationL); }
        if (leftNum = 9) { do Numbers.drawNine(locationL); }

        if (rightNum = 0) { do Numbers.drawZero(locationR); }
        if (rightNum = 1) { do Numbers.drawOne(locationR); }
        if (rightNum = 2) { do Numbers.drawTwo(locationR); }
        if (rightNum = 3) { do Numbers.drawThree(locationR); }
        if (rightNum = 4) { do Numbers.drawFour(locationR); }
        if (rightNum = 5) { do Numbers.drawFive(locationR); }
        if (rightNum = 6) { do Numbers.drawSix(locationR); }
        if (rightNum = 7) { do Numbers.drawSeven(locationR); }
        if (rightNum = 8) { do Numbers.drawEight(locationR); }
        if (rightNum = 9) { do Numbers.drawNine(locationR); }

        return;
    }

    // инкрементит очки стороны, которую передали в аргументы
    // проверяет условие окончания игры, ставит значение поля exit в true, если игру нужно закончить, рисуя при этом победителя
    method void ReScore(int LorR){
        var int location;
        let location = (y * 32) + (xL / 16);

        // если LorR = 0, значит добавляем очко левому игроку, иначе правому
        if (LorR = 0){
            let leftNum = leftNum + 1;
            if (leftNum < 10){
                do draw();
            }
        }
        else {
            let rightNum = rightNum + 1;
            if (rightNum < 10){
                do draw();
            }
        }

        // если забили 10 очко, то определяем победителя и рисуем заставочку
        if ((leftNum > 9) | (rightNum > 9)){
            let exit = true;
            if (leftNum > 9){
                do erase();
                do Winner.drawLeft(location);
            }
            else{
                do erase();
                do Winner.drawRight(location);
            }
        }
        return;
    }
}
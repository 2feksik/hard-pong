function Racket.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 1
pop this 3
push pointer 0
call Racket.draw 1
pop temp 0
push pointer 0
return
function Racket.getX 0
push argument 0
pop pointer 0
push this 0
return
function Racket.getY 0
push argument 0
pop pointer 0
push this 1
return
function Racket.getSize 0
push argument 0
pop pointer 0
push this 2
return
function Racket.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Racket.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
call RacketDrawing.draw 2
pop temp 0
push constant 0
return
function Racket.erase 2
push argument 0
pop pointer 0
push constant 16384
push this 3
push constant 32
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 32
lt
not
if-goto WHILE_END0
push local 0
push local 1
push constant 32
call Math.multiply 2
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push local 1
push constant 32
call Math.multiply 2
add
push constant 1
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Racket.moveUp 0
push argument 0
pop pointer 0
push this 1
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Racket.erase 1
pop temp 0
push this 1
pop this 3
push this 1
push constant 2
sub
pop this 1
push pointer 0
call Racket.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Racket.moveDown 0
push argument 0
pop pointer 0
push this 1
push this 2
add
push constant 254
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Racket.erase 1
pop temp 0
push this 1
pop this 3
push this 1
push constant 2
add
pop this 1
push pointer 0
call Racket.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return

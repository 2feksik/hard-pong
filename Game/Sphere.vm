function Sphere.new 0
push constant 10
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 0
pop this 8
push argument 1
pop this 9
push argument 2
pop this 2
push argument 3
pop this 3
push argument 4
pop this 4
push argument 5
pop this 5
push pointer 0
call Sphere.restoreVector 1
pop temp 0
push pointer 0
push this 0
push this 1
call Sphere.draw 3
pop temp 0
push pointer 0
return
function Sphere.getX 0
push argument 0
pop pointer 0
push this 0
return
function Sphere.getY 0
push argument 0
pop pointer 0
push this 1
return
function Sphere.getSize 0
push argument 0
pop pointer 0
push this 2
return
function Sphere.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Sphere.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Sphere.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Sphere.move 0
push argument 0
pop pointer 0
push pointer 0
push this 0
push this 1
call Sphere.erase 3
pop temp 0
push argument 1
pop this 0
push argument 2
pop this 1
push pointer 0
push this 0
push this 1
call Sphere.draw 3
pop temp 0
push constant 0
return
function Sphere.doLogic 3
push argument 0
pop pointer 0
push this 0
push this 6
add
pop local 0
push this 1
push this 7
add
pop local 1
push local 1
push this 2
sub
push constant 4
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 7
neg
pop this 7
label IF_FALSE0
push local 0
push this 2
sub
push this 3
call Racket.getX 1
push this 3
call Racket.getSize 1
add
push constant 4
add
lt
push local 1
push this 3
call Racket.getY 1
gt
and
push local 1
push this 3
call Racket.getY 1
push this 3
call Racket.getSize 1
add
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push this 3
call Racket.getY 1
sub
push constant 4
call Math.multiply 2
push this 3
call Racket.getSize 1
call Math.divide 2
pop local 2
push local 2
push constant 2
sub
pop this 7
push this 6
neg
pop this 6
push this 7
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
pop this 7
label IF_FALSE2
label IF_FALSE1
push local 0
push this 2
add
push this 4
call Racket.getX 1
push constant 4
sub
gt
push local 1
push this 4
call Racket.getY 1
gt
and
push local 1
push this 4
call Racket.getY 1
push this 4
call Racket.getSize 1
add
lt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push this 4
call Racket.getY 1
sub
push constant 4
call Math.multiply 2
push this 4
call Racket.getSize 1
call Math.divide 2
pop local 2
push local 2
push constant 2
sub
pop this 7
push this 6
neg
pop this 6
push this 7
push constant 0
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 1
neg
pop this 7
label IF_FALSE4
label IF_FALSE3
push local 0
push this 2
sub
push this 5
call Table.getX 1
gt
push local 0
push this 2
add
push this 5
call Table.getX 1
push this 5
call Table.getWidth 1
add
lt
and
push local 1
push this 2
add
push this 5
call Table.getY 1
push constant 4
sub
gt
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 7
neg
pop this 7
label IF_FALSE5
push pointer 0
push local 0
push local 1
push this 0
push this 1
call Sphere.Goal 5
push constant 1
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 2
neg
pop this 6
push constant 0
return
label IF_FALSE6
push pointer 0
push local 0
push local 1
push this 0
push this 1
call Sphere.Goal 5
push constant 0
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
return
label IF_FALSE7
push pointer 0
push local 0
push local 1
call Sphere.move 3
pop temp 0
push constant 0
return
function Sphere.condL 0
push argument 0
pop pointer 0
push argument 1
push this 2
sub
push constant 4
push argument 3
add
lt
push argument 2
push this 2
add
push this 5
call Table.getY 1
push argument 3
sub
gt
push argument 1
push this 2
sub
push this 5
call Table.getX 1
lt
and
or
return
function Sphere.condR 0
push argument 0
pop pointer 0
push argument 1
push this 2
add
push constant 508
push argument 3
sub
gt
push argument 2
push this 2
add
push this 5
call Table.getY 1
push argument 3
sub
gt
push argument 1
push this 2
add
push this 5
call Table.getX 1
push this 5
call Table.getWidth 1
add
gt
and
or
return
function Sphere.Goal 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
push constant 0
call Sphere.condL 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 3
push argument 4
call Sphere.erase 3
pop temp 0
push pointer 0
call Sphere.restore 1
pop temp 0
push constant 1
return
label IF_FALSE0
push pointer 0
push argument 1
push argument 2
push constant 0
call Sphere.condR 4
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push argument 3
push argument 4
call Sphere.erase 3
pop temp 0
push pointer 0
call Sphere.restore 1
pop temp 0
push constant 0
return
label IF_FALSE1
push constant 1
neg
return
function Sphere.restore 0
push argument 0
pop pointer 0
push pointer 0
push this 8
push this 9
call Sphere.move 3
pop temp 0
push pointer 0
call Sphere.restoreVector 1
pop temp 0
push constant 0
return
function Sphere.restoreVector 0
push argument 0
pop pointer 0
push constant 2
pop this 6
push constant 0
pop this 7
push constant 0
return
